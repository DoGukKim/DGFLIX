{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/App.js","index.js"],"names":["GnbWrap","styled","header","Gnb","nav","Logo","h1","GnbList","ul","GnbItem","li","props","current","GnbLink","Link","logo","withRouter","pathname","location","to","aria-label","Container","section","Title","h3","Grid","div","Section","title","children","PropsTypes","string","isRequired","chlidren","oneOfType","arrayOf","node","role","Text","span","Mesaage","text","Img","figure","bgUrl","Rating","p","Year","Poster","id","imageUrl","rating","year","isMovie","length","substring","propsTypes","number","bool","main","HomePresenter","nowPlaying","popular","upcoming","error","loading","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","prototype","array","API_KEY","api","axios","create","baseURL","moviesApi","get","params","api_key","language","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","func","SearchContainer","movieResults","tvResults","event","preventDefault","serachByTerm","target","a","ContentWarpper","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Item","Divider","Overview","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","object","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","GlobalStyle","createGlobalStyle","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.216bfd68.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n// styled-components\r\nconst GnbWrap = styled.header`\r\n  width: 100%;\r\n`;\r\nconst Gnb = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0px 20px;\r\n`;\r\nconst Logo = styled.h1`\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  color: red;\r\n  letter-spacing: 0.028em;\r\n`;\r\nconst GnbList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst GnbItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin: 0 10px 0 0;\r\n  }\r\n  width: 100px;\r\n  height: 60px;\r\n  border-bottom: 2px solid ${props => (props.current ? \"red\" : \"transparent\")};\r\n  transition: 0.25s cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\nconst GnbLink = styled(Link)`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  height: 100%;\r\n  font-size: ${props => (props.logo ? \"30px\" : \"16px\")};\r\n  font-weight: 600;\r\n  color: ${props => (props.logo ? \"red\" : \"#fff\")};\r\n`;\r\nconst Header = ({ location: { pathname } }) => {\r\n  return (\r\n    <>\r\n      <GnbWrap>\r\n        <Gnb>\r\n          <Logo>\r\n            <GnbLink to=\"/\" aria-label=\"Logo\" logo>\r\n              DGFLIX\r\n            </GnbLink>\r\n          </Logo>\r\n          <GnbList>\r\n            <GnbItem current={pathname === \"/\"}>\r\n              <GnbLink to=\"/\">Movies</GnbLink>\r\n            </GnbItem>\r\n            <GnbItem current={pathname === \"/tv\"}>\r\n              <GnbLink to=\"/tv\">TV</GnbLink>\r\n            </GnbItem>\r\n            <GnbItem current={pathname === \"/search\"}>\r\n              <GnbLink to=\"/search\">Search</GnbLink>\r\n            </GnbItem>\r\n          </GnbList>\r\n        </Gnb>\r\n      </GnbWrap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.section`\r\n  padding: 16px 20px;\r\n`;\r\nconst Title = styled.h3`\r\n  margin: 0 0 16px 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 30px;\r\n  margin: 0px 0 0 0;\r\n  font-size: 14px;\r\n`;\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Grid>{children}</Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.PropsTypes = {\r\n  title: PropsTypes.string.isRequired,\r\n  chlidren: PropsTypes.oneOfType([\r\n    PropsTypes.arrayOf(PropsTypes.node),\r\n    PropsTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  font-size: 26px;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <Container>\r\n      <span role=\"img\" aria-label=\"Loading\">\r\n        🕑\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100vw;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: red;\r\n`;\r\n\r\nconst Mesaage = ({ text }) => (\r\n  <Container>\r\n    <Text>{text}</Text>\r\n  </Container>\r\n);\r\nMesaage.PropsTypes = {\r\n  text: PropsTypes.string.isRequired,\r\n};\r\n\r\nexport default Mesaage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n// styled-components\r\nconst Container = styled.div``;\r\n\r\nconst Img = styled.figure`\r\n  background: url(${props => `http://image.tmdb.org/t/p/w300${props.bgUrl}`})\r\n    no-repeat center;\r\n  background-size: cover;\r\n  border-radius: 0.375em;\r\n  height: 180px;\r\n  transition: opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\nconst Rating = styled.p`\r\n  margin: 6px 0 0;\r\n`;\r\nconst Title = styled.p``;\r\nconst Year = styled.p`\r\n  font-size: 12px;\r\n  color: rgba(225, 225, 225, 0.6);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <Img bgUrl={imageUrl} />\r\n      <Rating>\r\n        <span role=\"img\" aria-label=\"rating\">\r\n          ⭐\r\n        </span>\r\n        {rating}/10\r\n      </Rating>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 20)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\nPoster.propsTypes = {\r\n  id: PropsTypes.number.isRequired,\r\n  imageUrl: PropsTypes.string,\r\n  title: PropsTypes.string.isRequired,\r\n  rating: PropsTypes.number,\r\n  year: PropsTypes.string,\r\n  isMovie: PropsTypes.bool,\r\n};\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Mesaage from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.main`\r\n  color: #fff;\r\n`;\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | DGFLIX</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Mesaage text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.prototype = {\r\n  nowPlaying: PropsTypes.array,\r\n  popular: PropsTypes.array,\r\n  upcoming: PropsTypes.array,\r\n  error: PropsTypes.string,\r\n  loading: PropsTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst API_KEY = \"9734c4d36568d0204a5a22191ecea9df\";\r\nconst LANGUAGE = \"ko-KR\";\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () =>\r\n    api.get(\"movie/now_playing\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  upcoming: () =>\r\n    api.get(\"movie/upcoming\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  popular: () =>\r\n    api.get(\"movie/popular\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n};\r\nexport const tvApi = {\r\n  topRated: () =>\r\n    api.get(\"tv/top_rated\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  popular: () =>\r\n    api.get(\"/tv/popular\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  airingToday: () =>\r\n    api.get(\"tv/airing_today\", {\r\n      params: {\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n        api_key: API_KEY,\r\n        language: LANGUAGE,\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can`t find movies information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Mesaage from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.main`\r\n  color: #fff;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Show | DGFLIX</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Mesaage text={error} />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\nTVPresenter.prototype = {\r\n  topRated: PropsTypes.array,\r\n  popular: PropsTypes.array,\r\n  airingToday: PropsTypes.array,\r\n  error: PropsTypes.string,\r\n  loading: PropsTypes.bool.isRequired,\r\n};\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can`t find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Mesaage from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.main`\r\n  color: #fff;\r\n`;\r\nconst Form = styled.form`\r\n  margin: 20px 0;\r\n  padding: 0px 20px;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  all: unset;\r\n  font-size: 21px;\r\n`;\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | DGFLIX</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResult && movieResult.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResult.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResult && tvResult.length > 0 && (\r\n          <Section title=\"TV Shows Results\">\r\n            {tvResult.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Mesaage text={error} />}\r\n        {tvResult &&\r\n          movieResult &&\r\n          tvResult.length === 0 &&\r\n          movieResult.length === 0 && <Mesaage text=\"Nothing Found..!\" />}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\nSearchPresenter.prototype = {\r\n  movieResult: PropsTypes.array,\r\n  tvResult: PropsTypes.array,\r\n  loading: PropsTypes.bool.isRequired,\r\n  error: PropsTypes.string,\r\n  searchTerm: PropsTypes.string,\r\n  handleSubmit: PropsTypes.func.isRequired,\r\n  updateTerm: PropsTypes.func.isRequired,\r\n};\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.serachByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  serachByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can`t find results\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResult={movieResults}\r\n        tvResult={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n// styled-components\r\nconst Container = styled.main``;\r\nconst ContentWarpper = styled.section`\r\n  position: relative;\r\n  height: calc(100vh - 60px);\r\n`;\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url(${props => props.bgImage}) no-repeat center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  max-width: 1280px;\r\n  height: 100%;\r\n`;\r\nconst Cover = styled.figure`\r\n  width: 460px;\r\n  height: calc(100% - 160px);\r\n  background: url(${props => props.bgImage}) no-repeat center;\r\n  background-size: cover;\r\n  border-radius: 0.375em;\r\n  z-index: 1;\r\n`;\r\nconst Data = styled.div`\r\n  padding: 0 0 0 13px;\r\n  width: calc(100% - 460px);\r\n  height: calc(100% - 160px);\r\n  color: #fff;\r\n  z-index: 1;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n`;\r\nconst ItemContainer = styled.div`\r\n  padding: 10px 0 0;\r\n  font-size: 14px;\r\n`;\r\nconst Item = styled.span``;\r\nconst Divider = styled.span`\r\n  margin: 0 14px;\r\n`;\r\nconst Overview = styled.p`\r\n  padding: 10px 0 0;\r\n  width: 80%;\r\n  font-size: 13px;\r\n  line-height: 2em;\r\n  opacity: 0.6;\r\n`;\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | DGFLIX</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n          {\"\"} | DGFLIX\r\n        </title>\r\n      </Helmet>\r\n      <ContentWarpper>\r\n        <Backdrop\r\n          bgImage={`http://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={`http://image.tmdb.org/t/p/original${result.poster_path}`}\r\n          />\r\n          <Data>\r\n            <Title>\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                {result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.runtime ? result.runtime : result.episode_run_time[0]}{\" \"}\r\n                min\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.genres &&\r\n                  result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  )}\r\n              </Item>\r\n            </ItemContainer>\r\n            <Overview>{result.overview}</Overview>\r\n          </Data>\r\n        </Content>\r\n      </ContentWarpper>\r\n    </Container>\r\n  );\r\nDetailPresenter.prototype = {\r\n  result: PropsTypes.object,\r\n  error: PropsTypes.string,\r\n  loading: PropsTypes.bool.isRequired,\r\n};\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can`t find anythng\",\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n// components\r\nimport Header from \"../Components/Header\";\r\n// Routes\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\n// Router\r\nimport Router from \"../Components/Router\";\r\n\r\n// GlobalStyled\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\nhtml,\r\nbody {\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  background-color: rgba(20, 20, 20 , 1);\r\n}\r\na {\r\n  color: inherit;\r\n  text-decoration: none;\r\n}\r\nol,\r\nul {\r\n  list-style: none;\r\n}\r\nimg {\r\n  border: none;\r\n  max-width: 100%;\r\n  vertical-align: middle;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  table-layout: fixed;\r\n  width: 100%;\r\n}\r\nfieldset {\r\n  border: none;\r\n}\r\nlegend,\r\ncaption {\r\n  display: none;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-weight: normal;\r\n  font-size: 100%;\r\n}\r\nheader,\r\nsection,\r\nfooter,\r\narticle,\r\naside,\r\nfigure,\r\nvideo,\r\naudio,\r\nnav {\r\n  display: block;\r\n}\r\nstrong,\r\nem {\r\n  font-weight: normal;\r\n  font-style: normal;\r\n}\r\nbutton,\r\ninput[type=\"submit\"],\r\ninput[type=\"reset\"] {\r\n  cursor: pointer;\r\n}\r\n.cf:after,\r\n.cf:before {\r\n  content: \"\";\r\n  display: block;\r\n  clear: both;\r\n}\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyle />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\n// Api\r\nimport \"./api\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}